(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2fd934c5"],{"27fe":function(e,n,s){var t=s("24fb");n=t(!1),n.push([e.i,".p-inputtext[data-v-006ecc48],button.p-button[data-v-006ecc48]{margin-right:.5rem}",""]),e.exports=n},"48a8":function(e,n,s){"use strict";s.r(n);var t=s("7a23"),l=function(e){return Object(t["J"])("data-v-006ecc48"),e=e(),Object(t["H"])(),e},i={class:"content-section introduction"},c=l((function(){return Object(t["k"])("div",{class:"feature-intro"},[Object(t["k"])("h1",null,"Message"),Object(t["k"])("p",null,"Messages is used to display inline messages with various severities.")],-1)})),a={class:"content-section implementation"},o={class:"card"},r=l((function(){return Object(t["k"])("h5",null,"Severities",-1)})),u=Object(t["n"])("Success Message Content"),b=Object(t["n"])("Info Message Content"),d=Object(t["n"])("Warning Message Content"),g=Object(t["n"])("Error Message Content"),m=l((function(){return Object(t["k"])("h5",null,"Custom Icon",-1)})),j=Object(t["n"])("Info Message Content"),O=l((function(){return Object(t["k"])("h5",null,"Dynamic",-1)})),p=l((function(){return Object(t["k"])("h5",null,"Inline Messages",-1)})),v=l((function(){return Object(t["k"])("p",null,"Message component is used to display inline messages mostly within forms.",-1)})),k={class:"grid"},f={class:"col-12 md:col-3"},y=Object(t["n"])("Message Content"),h={class:"col-12 md:col-3"},M=Object(t["n"])("Message Content"),w={class:"col-12 md:col-3"},I=Object(t["n"])("Message Content"),C={class:"col-12 md:col-3"},D=Object(t["n"])("Message Content"),S=l((function(){return Object(t["k"])("h5",null,"Auto Dismiss",-1)})),x=Object(t["n"])("This message will hide in 3 seconds."),_=l((function(){return Object(t["k"])("h5",null,"Validation Message",-1)})),Y={class:"formgroup-inline",style:{"margin-bottom":".5rem"}},G=l((function(){return Object(t["k"])("label",{for:"username",class:"p-sr-only"},"Username",-1)})),T=Object(t["n"])("Username is required"),A={class:"formgroup-inline"},U=l((function(){return Object(t["k"])("label",{for:"email",class:"p-sr-only"},"email",-1)}));function W(e,n,s,l,W,E){var N=Object(t["O"])("AppDemoActions"),Z=Object(t["O"])("Message"),q=Object(t["O"])("Button"),P=Object(t["O"])("InlineMessage"),V=Object(t["O"])("InputText"),B=Object(t["O"])("MessageDoc");return Object(t["G"])(),Object(t["j"])("div",null,[Object(t["k"])("div",i,[c,Object(t["o"])(N)]),Object(t["k"])("div",a,[Object(t["k"])("div",o,[r,Object(t["o"])(Z,{severity:"success"},{default:Object(t["Y"])((function(){return[u]})),_:1}),Object(t["o"])(Z,{severity:"info"},{default:Object(t["Y"])((function(){return[b]})),_:1}),Object(t["o"])(Z,{severity:"warn"},{default:Object(t["Y"])((function(){return[d]})),_:1}),Object(t["o"])(Z,{severity:"error"},{default:Object(t["Y"])((function(){return[g]})),_:1}),m,Object(t["o"])(Z,{severity:"info",icon:"pi-send"},{default:Object(t["Y"])((function(){return[j]})),_:1}),O,Object(t["o"])(q,{label:"Show",onClick:n[0]||(n[0]=function(e){return E.addMessages()})}),Object(t["o"])(t["e"],{name:"p-message",tag:"div"},{default:Object(t["Y"])((function(){return[(Object(t["G"])(!0),Object(t["j"])(t["a"],null,Object(t["M"])(W.messages,(function(e){return Object(t["G"])(),Object(t["h"])(Z,{severity:e.severity,key:e.id},{default:Object(t["Y"])((function(){return[Object(t["n"])(Object(t["S"])(e.content),1)]})),_:2},1032,["severity"])})),128))]})),_:1}),p,v,Object(t["k"])("div",k,[Object(t["k"])("div",f,[Object(t["o"])(P,{severity:"info"},{default:Object(t["Y"])((function(){return[y]})),_:1})]),Object(t["k"])("div",h,[Object(t["o"])(P,{severity:"success"},{default:Object(t["Y"])((function(){return[M]})),_:1})]),Object(t["k"])("div",w,[Object(t["o"])(P,{severity:"warn"},{default:Object(t["Y"])((function(){return[I]})),_:1})]),Object(t["k"])("div",C,[Object(t["o"])(P,{severity:"error"},{default:Object(t["Y"])((function(){return[D]})),_:1})])]),S,Object(t["o"])(Z,{severity:"warn",life:3e3,sticky:!1},{default:Object(t["Y"])((function(){return[x]})),_:1}),_,Object(t["k"])("div",Y,[G,Object(t["o"])(V,{id:"username",placeholder:"Username",class:"p-invalid"}),Object(t["o"])(P,null,{default:Object(t["Y"])((function(){return[T]})),_:1})]),Object(t["k"])("div",A,[U,Object(t["o"])(V,{id:"email",placeholder:"Email",class:"p-invalid"}),Object(t["o"])(P)])])]),Object(t["o"])(B)])}var E=Object(t["k"])("h5",null,"Import via Module",-1),N=Object(t["k"])("code",null,"\nimport Message from 'primevue/message';\n\n",-1),Z=[N],q=Object(t["k"])("h5",null,"Import via CDN",-1),P=Object(t["k"])("code",null,'\n<script src="https://unpkg.com/primevue@^3/core/core.min.js"><\/script>\n\n',-1),V=[P],B=Object(t["k"])("h5",null,"Getting Started",-1),J=Object(t["k"])("p",null,"Message component requires a content to display.",-1),F=Object(t["k"])("code",null,"\n<Message>Welcome to PrimeVue</Message>\n\n",-1),H=[F],z=Object(t["k"])("p",null,"Multiple messages can be displayed using the standard v-for directive.",-1),K=Object(t["k"])("code",null,[Object(t["k"])("template",null,[Object(t["n"])('\n<Message v-for="msg of messages" :severity="msg.severity" :key="msg.content">{{msg.content}}</Message>\n')]),Object(t["n"])("\n")],-1),L=[K],Q=Object(t["k"])("code",null,"\ndata() {\n\treturn {\n\t\tmessages: [\n\t\t\t{severity: 'info', content: 'Dynamic Info Message'},\n\t\t\t{severity: 'success', content: 'Dynamic Success Message'},\n\t\t\t{severity: 'warn', content: 'Dynamic Warning Message'}\n\t\t]\n\t}\n}\n\n",-1),R=[Q],X=Object(t["k"])("h5",null,"Severities",-1),$=Object(t["k"])("p",null,'There are four possible values for the severity of a message. Default one is "info".',-1),ee=Object(t["k"])("ul",null,[Object(t["k"])("li",null,"success"),Object(t["k"])("li",null,"info"),Object(t["k"])("li",null,"warn"),Object(t["k"])("li",null,"error")],-1),ne=Object(t["k"])("h5",null,"Closable",-1),se=Object(t["k"])("p",null,[Object(t["n"])("Messages are closable by default resulting in a close icon being displayed on top right corner. In order to disable closable messages, set "),Object(t["k"])("i",null,"closable"),Object(t["n"])(" to false.")],-1),te=Object(t["k"])("code",null,'\n<Message severity="success" :closable="false">Order Submitted</Message>\n\n',-1),le=[te],ie=Object(t["k"])("h5",null,"Sticky",-1),ce=Object(t["k"])("p",null,[Object(t["n"])("Messages are sticky by default, if you require them to be cleared automatically, disable "),Object(t["k"])("i",null,"sticky"),Object(t["n"])(" property and optionally configure the "),Object(t["k"])("i",null,"life"),Object(t["n"])(" property to specify how long the message should be displayed which is 3000 ms by default.")],-1),ae=Object(t["k"])("code",null,'\n<Message severity="warn" :life="5000" :sticky="false">This message will hide in 5 seconds.</Message>\n\n',-1),oe=[ae],re=Object(t["k"])("h5",null,"Inline Message Component",-1),ue=Object(t["k"])("code",null,"\nimport InlineMessage from 'primevue/inlinemessage';\n\n",-1),be=[ue],de=Object(t["k"])("p",null,[Object(t["n"])("InlineMessage component is useful in cases where a single message needs to be displayed related to an element such as forms. It has one property, "),Object(t["k"])("i",null,"severity"),Object(t["n"])(" of the message.")],-1),ge=Object(t["k"])("code",null,'\n<InputText placeholder="Username" class="p-invalid" />\n<InlineMessage>Field is required</InlineMessage>\n\n',-1),me=[ge],je=Object(t["k"])("h5",null,"Properties of Message",-1),Oe=Object(t["k"])("div",{class:"doc-tablewrapper"},[Object(t["k"])("table",{class:"doc-table"},[Object(t["k"])("thead",null,[Object(t["k"])("tr",null,[Object(t["k"])("th",null,"Name"),Object(t["k"])("th",null,"Type"),Object(t["k"])("th",null,"Default"),Object(t["k"])("th",null,"Description")])]),Object(t["k"])("tbody",null,[Object(t["k"])("tr",null,[Object(t["k"])("td",null,"severity"),Object(t["k"])("td",null,"string"),Object(t["k"])("td",null,"info"),Object(t["k"])("td",null,"Severity level of the message.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"closable"),Object(t["k"])("td",null,"boolean"),Object(t["k"])("td",null,"true"),Object(t["k"])("td",null,"Whether the message can be closed manually using the close icon.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"sticky"),Object(t["k"])("td",null,"boolean"),Object(t["k"])("td",null,"null"),Object(t["k"])("td",null,"When enabled, message is not removed automatically.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"life"),Object(t["k"])("td",null,"number"),Object(t["k"])("td",null,"3000"),Object(t["k"])("td",null,"Delay in milliseconds to close the message automatically.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"icon"),Object(t["k"])("td",null,"string"),Object(t["k"])("td",null,"null"),Object(t["k"])("td",null,"Display a custom icon for the message.")])])])],-1),pe=Object(t["k"])("h5",null,"Properties of InlineMessage",-1),ve=Object(t["k"])("div",{class:"doc-tablewrapper"},[Object(t["k"])("table",{class:"doc-table"},[Object(t["k"])("thead",null,[Object(t["k"])("tr",null,[Object(t["k"])("th",null,"Name"),Object(t["k"])("th",null,"Type"),Object(t["k"])("th",null,"Default"),Object(t["k"])("th",null,"Description")])]),Object(t["k"])("tbody",null,[Object(t["k"])("tr",null,[Object(t["k"])("td",null,"severity"),Object(t["k"])("td",null,"string"),Object(t["k"])("td",null,"info"),Object(t["k"])("td",null,"Severity level of the message.")])])])],-1),ke=Object(t["k"])("h5",null,"Events of Message",-1),fe=Object(t["k"])("div",{class:"doc-tablewrapper"},[Object(t["k"])("table",{class:"doc-table"},[Object(t["k"])("thead",null,[Object(t["k"])("tr",null,[Object(t["k"])("th",null,"Name"),Object(t["k"])("th",null,"Parameters"),Object(t["k"])("th",null,"Description")])]),Object(t["k"])("tbody",null,[Object(t["k"])("tr",null,[Object(t["k"])("td",null,"close"),Object(t["k"])("td",null,"event: Browser event"),Object(t["k"])("td",null,"Callback to invoke when a message is closed.")])])])],-1),ye=Object(t["k"])("h5",null,"Styling",-1),he=Object(t["n"])("Following is the list of structural style classes, for theming classes visit "),Me=Object(t["n"])("theming"),we=Object(t["n"])(" page."),Ie=Object(t["k"])("strong",null,"Message",-1),Ce=Object(t["k"])("div",{class:"doc-tablewrapper"},[Object(t["k"])("table",{class:"doc-table"},[Object(t["k"])("thead",null,[Object(t["k"])("tr",null,[Object(t["k"])("th",null,"Name"),Object(t["k"])("th",null,"Element")])]),Object(t["k"])("tbody",null,[Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages"),Object(t["k"])("td",null,"Container element.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages-info"),Object(t["k"])("td",null,"Container element when displaying info messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages-warn"),Object(t["k"])("td",null,"Container element when displaying warning messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages-error"),Object(t["k"])("td",null,"Container element when displaying error messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages-success"),Object(t["k"])("td",null,"Container element when displaying success messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages-close"),Object(t["k"])("td",null,"Close icon.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages-icon"),Object(t["k"])("td",null,"Severity icon.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-messages-text"),Object(t["k"])("td",null,"Content of a message.")])])])],-1),De=Object(t["k"])("strong",null,"InlineMessage",-1),Se=Object(t["k"])("div",{class:"doc-tablewrapper"},[Object(t["k"])("table",{class:"doc-table"},[Object(t["k"])("thead",null,[Object(t["k"])("tr",null,[Object(t["k"])("th",null,"Name"),Object(t["k"])("th",null,"Element")])]),Object(t["k"])("tbody",null,[Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-inline-message"),Object(t["k"])("td",null,"Container element.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-inline-message-info"),Object(t["k"])("td",null,"Container element when displaying info messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-inline-message-warn"),Object(t["k"])("td",null,"Container element when displaying warning messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-inline-message-error"),Object(t["k"])("td",null,"Container element when displaying error messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-inline-message-success"),Object(t["k"])("td",null,"Container element when displaying success messages.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-inline-message-icon"),Object(t["k"])("td",null,"Severity icon.")]),Object(t["k"])("tr",null,[Object(t["k"])("td",null,"p-inline-message-text"),Object(t["k"])("td",null,"Content of a message.")])])])],-1),xe=Object(t["k"])("h5",null,"Dependencies",-1),_e=Object(t["k"])("p",null,"None.",-1);function Ye(e,n,s,l,i,c){var a=Object(t["O"])("router-link"),o=Object(t["O"])("AppDoc"),r=Object(t["P"])("code");return Object(t["G"])(),Object(t["h"])(o,{name:"MessageDemo",sources:i.sources,github:"message/MessageDemo.vue"},{default:Object(t["Y"])((function(){return[E,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,Z)),[[r,void 0,void 0,{script:!0}]]),q,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,V)),[[r]]),B,J,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,H)),[[r]]),z,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,L)),[[r]]),Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,R)),[[r,void 0,void 0,{script:!0}]]),X,$,ee,ne,se,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,le)),[[r]]),ie,ce,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,oe)),[[r]]),re,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,be)),[[r,void 0,void 0,{script:!0}]]),de,Object(t["Z"])((Object(t["G"])(),Object(t["j"])("pre",null,me)),[[r]]),je,Oe,pe,ve,ke,fe,ye,Object(t["k"])("p",null,[he,Object(t["o"])(a,{to:"/theming"},{default:Object(t["Y"])((function(){return[Me]})),_:1}),we]),Ie,Ce,De,Se,xe,_e]})),_:1},8,["sources"])}var Ge={data:function(){return{sources:{"options-api":{tabName:"Options API Source",content:'\n<template>\n    <div>\n        <h5>Severities</h5>\n        <Message severity="success">Success Message Content</Message>\n        <Message severity="info">Info Message Content</Message>\n        <Message severity="warn">Warning Message Content</Message>\n        <Message severity="error">Error Message Content</Message>\n\n        <h5>Dynamic</h5>\n        <Button label="Show" @click="addMessages()" />\n        <transition-group name="p-message" tag="div">\n            <Message v-for="msg of messages" :severity="msg.severity" :key="msg.id">{{msg.content}}</Message>\n        </transition-group>\n\n        <h5>Inline Messages</h5>\n        <p>Message component is used to display inline messages mostly within forms.</p>\n        <div class="grid">\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="info">Message Content</InlineMessage>\n            </div>\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="success">Message Content</InlineMessage>\n            </div>\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="warn">Message Content</InlineMessage>\n            </div>\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="error">Message Content</InlineMessage>\n            </div>\n        </div>\n\n        <h5>Auto Dismiss</h5>\n        <Message severity="warn" :life="3000" :sticky="false">This message will hide in 3 seconds.</Message>\n\n        <h5>Validation Message</h5>\n        <div class="formgroup-inline" style="margin-bottom:.5rem">\n            <label for="username" class="p-sr-only">Username</label>\n            <InputText id="username" placeholder="Username" class="p-invalid" />\n            <InlineMessage>Username is required</InlineMessage>\n        </div>\n        <div class="formgroup-inline">\n            <label for="email" class="p-sr-only">email</label>\n            <InputText id="email" placeholder="Email" class="p-invalid" />\n            <InlineMessage />\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            messages: [],\n            count: 0\n        }\n    },\n    methods: {\n        addMessages() {\n            this.messages = [\n                {severity: \'info\', content: \'Dynamic Info Message\', id: this.count++},\n                {severity: \'success\', content: \'Dynamic Success Message\', id: this.count++},\n                {severity: \'warn\', content: \'Dynamic Warning Message\', id: this.count++}\n            ]\n        }\n    }\n}\n<\\/script>\n\n<style scoped>\nbutton.p-button {\n    margin-right: .5rem;\n}\n\n.p-inputtext {\n    margin-right: .5rem;\n}\n</style>'},"composition-api":{tabName:"Composition API Source",content:'\n<template>\n    <div>\n        <h5>Severities</h5>\n        <Message severity="success">Success Message Content</Message>\n        <Message severity="info">Info Message Content</Message>\n        <Message severity="warn">Warning Message Content</Message>\n        <Message severity="error">Error Message Content</Message>\n\n        <h5>Dynamic</h5>\n        <Button label="Show" @click="addMessages()" />\n        <transition-group name="p-message" tag="div">\n            <Message v-for="msg of messages" :severity="msg.severity" :key="msg.id">{{msg.content}}</Message>\n        </transition-group>\n\n        <h5>Inline Messages</h5>\n        <p>Message component is used to display inline messages mostly within forms.</p>\n        <div class="grid">\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="info">Message Content</InlineMessage>\n            </div>\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="success">Message Content</InlineMessage>\n            </div>\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="warn">Message Content</InlineMessage>\n            </div>\n            <div class="col-12 md:col-3">\n                <InlineMessage severity="error">Message Content</InlineMessage>\n            </div>\n        </div>\n\n        <h5>Auto Dismiss</h5>\n        <Message severity="warn" :life="3000" :sticky="false">This message will hide in 3 seconds.</Message>\n\n        <h5>Validation Message</h5>\n        <div class="formgroup-inline" style="margin-bottom:.5rem">\n            <label for="username" class="p-sr-only">Username</label>\n            <InputText id="username" placeholder="Username" class="p-invalid" />\n            <InlineMessage>Username is required</InlineMessage>\n        </div>\n        <div class="formgroup-inline">\n            <label for="email" class="p-sr-only">email</label>\n            <InputText id="email" placeholder="Email" class="p-invalid" />\n            <InlineMessage />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ref } from \'vue\';\n\nexport default {\n    setup() {\n        const messages = ref([]);\n        const count = ref(0);\n        const addMessages = () => {\n            messages.value = [\n                {severity: \'info\', content: \'Dynamic Info Message\', id: count.value++},\n                {severity: \'success\', content: \'Dynamic Success Message\', id: count.value++},\n                {severity: \'warn\', content: \'Dynamic Warning Message\', id: count.value++}\n            ]\n        };\n\n        return { messages, count, addMessages }\n    }\n}\n<\\/script>\n\n<style scoped>\nbutton.p-button {\n    margin-right: .5rem;\n}\n\n.p-inputtext {\n    margin-right: .5rem;\n}\n</style>'},"browser-source":{tabName:"Browser Source",imports:'<script src="https://unpkg.com/primevue@^3/inlinemessage/inlinemessage.min.js"><\\/script>',content:'<div id="app">\n            <h5>Severities</h5>\n            <p-message severity="success">Success Message Content</p-message>\n            <p-message severity="info">Info Message Content</p-message>\n            <p-message severity="warn">Warning Message Content</p-message>\n            <p-message severity="error">Error Message Content</p-message>\n\n            <h5>Dynamic</h5>\n            <p-button label="Show" @click="addMessages()"></p-button>\n            <transition-group name="p-message" tag="div">\n                <p-message v-for="msg of messages" :severity="msg.severity" :key="msg.id">{{msg.content}}</p-message>\n            </transition-group>\n\n            <h5>Inline Messages</h5>\n            <p>Message component is used to display inline messages mostly within forms.</p>\n            <div class="grid">\n                <div class="col-12 md:col-3">\n                    <p-inlinemessage severity="info">Message Content</p-inlinemessage>\n                </div>\n                <div class="col-12 md:col-3">\n                    <p-inlinemessage severity="success">Message Content</p-inlinemessage>\n                </div>\n                <div class="col-12 md:col-3">\n                    <p-inlinemessage severity="warn">Message Content</p-inlinemessage>\n                </div>\n                <div class="col-12 md:col-3">\n                    <p-inlinemessage severity="error">Message Content</p-inlinemessage>\n                </div>\n            </div>\n\n            <h5>Auto Dismiss</h5>\n            <p-message severity="warn" :life="3000" :sticky="false">This message will hide in 3 seconds.</p-message>\n\n            <h5>Validation Message</h5>\n            <div class="formgroup-inline" style="margin-bottom:.5rem">\n                <label for="username" class="p-sr-only">Username</label>\n                <p-inputtext id="username" placeholder="Username" class="p-invalid"></p-inputtext>\n                <p-inlinemessage>Username is required</p-inlinemessage>\n            </div>\n            <div class="formgroup-inline">\n                <label for="email" class="p-sr-only">email</label>\n                <p-inputtext id="email" placeholder="Email" class="p-invalid"></p-inputtext>\n                <p-inlinemessage></p-inlinemessage>\n            </div>\n        </div>\n\n        <script type="module">\n        const { createApp, ref } = Vue;\n\n        const App = {\n            setup() {\n                const messages = ref([]);\n                const count = ref(0);\n                const addMessages = () => {\n                    messages.value = [\n                        {severity: \'info\', content: \'Dynamic Info Message\', id: count.value++},\n                        {severity: \'success\', content: \'Dynamic Success Message\', id: count.value++},\n                        {severity: \'warn\', content: \'Dynamic Warning Message\', id: count.value++}\n                    ]\n                };\n\n                return { messages, count, addMessages }\n            },\n            components: {\n                "p-message": primevue.message,\n                "p-inlinemessage": primevue.inlinemessage,\n                "p-button": primevue.button,\n                "p-inputtext": primevue.inputtext\n            }\n        };\n\n        createApp(App)\n            .use(primevue.config.default)\n            .mount("#app");\n        <\\/script>\n\n        <style>\n        button.p-button {\n            margin-right: .5rem;\n        }\n\n        .p-inputtext {\n            margin-right: .5rem;\n        }\n        </style>'}}}}},Te=s("6b0d"),Ae=s.n(Te);const Ue=Ae()(Ge,[["render",Ye]]);var We=Ue,Ee={data:function(){return{messages:[],count:0}},methods:{addMessages:function(){this.messages=[{severity:"info",content:"Dynamic Info Message",id:this.count++},{severity:"success",content:"Dynamic Success Message",id:this.count++},{severity:"warn",content:"Dynamic Warning Message",id:this.count++}]}},components:{MessageDoc:We}};s("8278");const Ne=Ae()(Ee,[["render",W],["__scopeId","data-v-006ecc48"]]);n["default"]=Ne},8278:function(e,n,s){"use strict";s("f565")},f565:function(e,n,s){var t=s("27fe");t.__esModule&&(t=t.default),"string"===typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var l=s("499e").default;l("3b868158",t,!0,{sourceMap:!1,shadowMode:!1})}}]);